To attach the "Quicklinks" menu to an icon, you can use HTML, CSS, and JavaScript. Hereâ€™s an example:

### HTML
1. Create an icon that users can click on to open the "Quicklinks."
2. Use a div element to contain the quicklinks menu.

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quicklinks</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <!-- Icon that toggles the Quicklinks menu -->
    <div class="icon" onclick="toggleQuicklinks()">
        <img src="icon.png" alt="Quicklinks Icon">
    </div>

    <!-- Quicklinks Menu -->
    <div id="quicklinks" class="quicklinks">
        <a href="#account">My Account</a>
        <a href="#return">Initiate Return</a>
        <a href="#favorites">Favorites</a>
        <a href="#support">Support</a>
        <a href="#language">Language</a>
    </div>

    <script src="script.js"></script>
</body>
</html>
```

### CSS (`styles.css`)
Add some basic styling to make the quicklinks menu hidden by default and styled similarly to a dropdown.

```css
/* Icon styling */
.icon {
    cursor: pointer;
    width: 30px;
    height: 30px;
}

/* Quicklinks menu styling */
.quicklinks {
    display: none; /* Hidden by default */
    position: absolute;
    top: 50px; /* Position below the icon */
    right: 10px; /* Adjust as needed */
    background-color: white;
    border: 1px solid #ddd;
    padding: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

.quicklinks a {
    display: block;
    padding: 8px 16px;
    text-decoration: none;
    color: black;
}

.quicklinks a:hover {
    background-color: #f1f1f1;
}
```

### JavaScript (`script.js`)
Add a function to toggle the visibility of the "Quicklinks" menu when the icon is clicked.

```javascript
function toggleQuicklinks() {
    var quicklinks = document.getElementById("quicklinks");
    if (quicklinks.style.display === "block") {
        quicklinks.style.display = "none";
    } else {
        quicklinks.style.display = "block";
    }
}
```

### Explanation
- The `toggleQuicklinks` function in JavaScript changes the display property of the quicklinks menu each time the icon is clicked.
- The `.quicklinks` div is hidden by default with `display: none;` in CSS.
- The `display` toggles between `block` and `none`, showing or hiding the menu accordingly.